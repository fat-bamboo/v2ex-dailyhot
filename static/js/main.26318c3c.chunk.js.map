{"version":3,"sources":["utils.ts","consts.ts","components/base/BaseDialog.tsx","components/AboutDialog.tsx","components/TopicListContainer.tsx","App.tsx","index.tsx"],"names":["formatDate","timestamp","tempData","Date","year","getFullYear","month","getMonth","date","getDate","getCurrentTimeStamp","now","getTimezoneOffset","getTime","BaseDialog","props","className","this","class","children","React","Component","AboutDialog","tempContainerEl","document","createElement","body","classList","add","ReactDOM","render","appendChild","remove","onClick","close","bind","href","TopicListContainer","dateStr","topics","length","map","t","idx","url","title","id","App","state","isFetching","dailyTopics","failedFetching","beginingTimestamp","currentTimestamp","utils","formatDateString","rawDataFilePath","fetch","res","ok","status","json","setState","concat","showAboutDialog","d","refreshPage","setTimeout","componentDidMount","show","StrictMode","getElementById"],"mappings":"2UAIO,SAASA,EAAWC,GACzB,IAAMC,EAAW,IAAIC,KAAKF,GAEpBG,EAAOF,EAASG,cAClBC,EAAyBJ,EAASK,WAAa,EAC/CC,EAAwBN,EAASO,UASrC,OAPIH,EAAQ,KACVA,EAAQ,IAAMA,GAEZE,EAAO,KACTA,EAAO,IAAMA,GAGT,GAAN,OAAUJ,EAAV,YAAkBE,EAAlB,YAA2BE,GAItB,SAASE,IAGd,OAFoB,IAAIP,KAAKA,KAAKQ,MAOM,IAAjC,IAAIR,MAAOS,oBAA2B,KAL1BC,U,MCxBd,ICScC,E,kDAGnB,WAAYC,GAAe,IAAD,8BACxB,cAAMA,IAHDA,WAEmB,EAExB,EAAKA,MAAQA,EAFW,E,qDAMxB,OACE,qBAAKC,UAAU,sBAAf,SACE,qBAAKA,UAAW,yBAA2BC,KAAKF,MAAMG,MAAtD,SAA8DD,KAAKF,MAAMI,iB,GAXzCC,IAAMC,WCLzBC,G,wDAGnB,aAAyB,IAAD,EAAZP,EAAY,uDAAJ,GAAI,4BACtB,cAAMA,IAHAQ,qBAEgB,EAGtB,EAAKA,gBAAkBC,SAASC,cAAc,OAHxB,E,mDAOtBD,SAASE,KAAKC,UAAUC,IAAI,4BAC5BC,IAASC,OAAOb,KAAKa,SAAUN,SAASE,KAAKK,YAAYd,KAAKM,oB,8BAI9DN,KAAKM,gBAAgBS,SACrBR,SAASE,KAAKC,UAAUK,OAAO,8B,+BAI/B,OACE,eAAC,EAAD,CAAYd,MAAM,yBAAlB,UACE,sBAAKF,UAAU,mBAAf,UACE,mBAAGA,UAAU,aAAb,mBACA,sBAAMA,UAAU,gBAAgBiB,QAAShB,KAAKiB,MAAMC,KAAKlB,MAAzD,sBAIF,sBAAKD,UAAU,oBAAf,UACE,gLACA,+DAEE,mBAAGoB,KAAK,sDAAR,iC,GAhC6BhB,IAAMC,YCI1BgB,G,wDAGnB,WAAYtB,GAAe,IAAD,8BACxB,cAAMA,IAHDA,WAEmB,EAGxB,EAAKA,MAAQA,EAHW,E,qDAMT,IAAD,EACoBE,KAAKF,MAAzBuB,EADA,EACN9B,KAAe+B,EADT,EACSA,OAEvB,OACE,sBAAKvB,UAAU,mBAAf,UACE,mBAAGA,UAAU,YAAb,SAA0BsB,IACP,IAAlBC,EAAOC,OACN,mBAAGxB,UAAU,YAAb,sCAEAuB,EAAOE,KAAI,SAACC,EAAGC,GAAJ,OACT,sBAAK3B,UAAU,kBAAf,UACE,uBAAMA,UAAU,aAAhB,UAA8B2B,EAAM,EAApC,OACA,mBAAG3B,UAAU,YAAYoB,KAAMM,EAAEE,IAAjC,SACGF,EAAEG,UAH+BH,EAAEI,c,GAnBJ1B,IAAMC,YC0GvC0B,G,wDA/Fb,WAAYhC,GAAY,IAAD,8BACrB,cAAMA,IAHDiC,WAEgB,EAGrB,EAAKA,MAAQ,CACXC,YAAY,EACZC,YAAa,GACbC,gBAAgB,GANG,E,0LAWfC,EJ3BoC,WI4BtCC,EAAmBC,I,YAEhBD,EAAmBD,G,wBAClBG,EAAmBD,EAAiBD,GACpCG,EJnCqB,sDImCiBD,EAAmB,Q,kBAG3CE,MAAMD,G,UAAlBE,E,OACFR,EAAc,CAChB1C,KAAM+C,EACNhB,OAAQ,IAGLmB,EAAIC,IAAqB,MAAfD,EAAIE,O,0DAGUF,EAAIG,O,QAA/BX,EAAYX,O,eAGdtB,KAAK6C,SAAS,CACZZ,YAAajC,KAAK+B,MAAME,YAAYa,OAAOb,K,yDAG7CjC,KAAK6C,SAAS,CACZX,gBAAgB,I,6BAKpBE,GJtDwC,M,uBIyD1CpC,KAAK6C,SAAS,CACZb,YAAY,I,+IAKd,OACE,sBAAKjC,UAAU,iBAAf,UACE,yBAAQA,UAAU,mBAAlB,UACE,mBAAGA,UAAU,cAAb,uDACA,sBAAMA,UAAU,YAAYiB,QAAShB,KAAK+C,gBAAgB7B,KAAKlB,MAA/D,sBAKDA,KAAK+B,MAAME,YAAYT,KAAI,SAACwB,GAAD,OAC1B,cAAC,EAAD,CAAiC1B,OAAQ0B,EAAE1B,OAAQ/B,KAAMyD,EAAEzD,MAAlCyD,EAAEzD,SAG5BS,KAAK+B,MAAMC,YAAc,kEAEzBhC,KAAK+B,MAAMG,gBACV,2EAEE,sBAAMnC,UAAU,aAAaiB,QAAShB,KAAKiD,YAAY/B,KAAKlB,MAA5D,gE,oCASa,IAAD,OACpBA,KAAK6C,SAAS,CACZb,YAAY,EACZC,YAAa,GACbC,gBAAgB,IAGlBgB,YAAW,WACT,EAAKC,sBACJ,O,yCAIiB,IAAI9C,GACZ+C,W,GA9FEjD,IAAMC,Y,MCZxBQ,IAASC,OACP,cAAC,IAAMwC,WAAP,UACE,cAAC,EAAD,MAEF9C,SAAS+C,eAAe,W","file":"static/js/main.26318c3c.chunk.js","sourcesContent":["/**\n * 根据时间戳返回特殊格式化后的字符串，例如 2020-12-21\n * @param timestamp 时间戳，单位毫秒\n */\nexport function formatDate(timestamp: number): string {\n  const tempData = new Date(timestamp);\n\n  const year = tempData.getFullYear();\n  let month: number | string = tempData.getMonth() + 1;\n  let date: number | string = tempData.getDate();\n\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n  if (date < 10) {\n    date = \"0\" + date;\n  }\n\n  return `${year}-${month}-${date}`;\n}\n\n/** 返回此时时间戳，以毫秒为单位 */\nexport function getCurrentTimeStamp(): number {\n  const currentDate = new Date(Date.now() + getTimezoneMsOffset());\n\n  return currentDate.getTime();\n}\n\n/** 返回时区差值，以毫秒为单位 */\nexport function getTimezoneMsOffset(): number {\n  return new Date().getTimezoneOffset() * 60 * 1000;\n}\n","/** 数据文件url前缀 */\nexport const RAW_JSON_BASE_URL = \"https://boojack.github.io/v2ex-daily-hot-topic/raw/\";\n\n/** 数据爬虫开始日期: \"2020/12/18\" */\nexport const SCRIPT_BEGIN_TIMESTAMP: number = 1608220800000;\n\n/** 一天的毫秒数 */\nexport const DAY_MILLISECONDS_COUNT: number = 24 * 60 * 60 * 1000;\n","import React from \"react\";\nimport \"../../css/base/base-dialog.css\";\n\ntype Props = {\n  // css class names\n  class: string;\n  // slot elements\n  children: React.ReactNode;\n};\n\nexport default class BaseDialog extends React.Component {\n  public props: Props;\n\n  constructor(props: Props) {\n    super(props);\n    this.props = props;\n  }\n\n  public render() {\n    return (\n      <div className=\"dialog-main-wrapper\">\n        <div className={\"dialog-main-container \" + this.props.class}>{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport BaseDialog from \"./base/BaseDialog\";\nimport \"../css/about-dialog.css\";\n\nexport default class AboutDialog extends React.Component {\n  private tempContainerEl: HTMLDivElement;\n\n  constructor(props = {}) {\n    super(props);\n\n    this.tempContainerEl = document.createElement(\"div\");\n  }\n\n  public show() {\n    document.body.classList.add(\"dialog-present-no-scroll\");\n    ReactDOM.render(this.render(), document.body.appendChild(this.tempContainerEl));\n  }\n\n  public close() {\n    this.tempContainerEl.remove();\n    document.body.classList.remove(\"dialog-present-no-scroll\");\n  }\n\n  public render() {\n    return (\n      <BaseDialog class=\"about-dialog-container\">\n        <div className=\"header-container\">\n          <p className=\"title-text\">About</p>\n          <span className=\"btn close-btn\" onClick={this.close.bind(this)}>\n            Close\n          </span>\n        </div>\n        <div className=\"content-container\">\n          <p>V2EX 热议话题榜，展示从 2020-12-18 日开始的 V2EX 热议话题榜单。</p>\n          <p>\n            源码地址：\n            <a href=\"https://github.com/boojack/v2ex-daily-hot-topic-web\">GitHub</a>\n          </p>\n        </div>\n      </BaseDialog>\n    );\n  }\n}\n","import React from \"react\";\nimport { Topic } from \"../types\";\nimport \"../css/topic-list-container.css\";\n\ntype Props = {\n  date: string;\n  topics: Topic[];\n};\n\nexport default class TopicListContainer extends React.Component {\n  public props: Props;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.props = props;\n  }\n\n  public render() {\n    const { date: dateStr, topics } = this.props;\n\n    return (\n      <div className=\"topics-container\">\n        <p className=\"date-text\">{dateStr}</p>\n        {topics.length === 0 ? (\n          <p className=\"null-text\">空空如也</p>\n        ) : (\n          topics.map((t, idx) => (\n            <div className=\"topic-container\" key={t.id}>\n              <span className=\"index-text\">{idx + 1}.</span>\n              <a className=\"link-text\" href={t.url}>\n                {t.title}\n              </a>\n            </div>\n          ))\n        )}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport * as utils from \"./utils\";\nimport { Topic } from \"./types\";\nimport { RAW_JSON_BASE_URL, SCRIPT_BEGIN_TIMESTAMP, DAY_MILLISECONDS_COUNT } from \"./consts\";\nimport AboutDialog from \"./components/AboutDialog\";\nimport TopicListContainer from \"./components/TopicListContainer\";\nimport \"./css/app.css\";\n\ntype State = {\n  isFetching: boolean;\n  dailyTopics: {\n    date: string;\n    topics: Topic[];\n  }[];\n  failedFetching: boolean;\n};\n\nclass App extends React.Component {\n  public state: State;\n\n  constructor(props: {}) {\n    super(props);\n\n    this.state = {\n      isFetching: true,\n      dailyTopics: [],\n      failedFetching: false,\n    };\n  }\n\n  async componentDidMount() {\n    const beginingTimestamp = SCRIPT_BEGIN_TIMESTAMP;\n    let currentTimestamp = utils.getCurrentTimeStamp();\n\n    while (currentTimestamp > beginingTimestamp) {\n      const formatDateString = utils.formatDate(currentTimestamp);\n      const rawDataFilePath = RAW_JSON_BASE_URL + formatDateString + \".json\";\n\n      try {\n        const res = await fetch(rawDataFilePath);\n        let dailyTopics = {\n          date: formatDateString,\n          topics: [],\n        };\n\n        if (!res.ok && res.status === 404) {\n          // do nth\n        } else {\n          dailyTopics.topics = await res.json();\n        }\n\n        this.setState({\n          dailyTopics: this.state.dailyTopics.concat(dailyTopics),\n        });\n      } catch (error) {\n        this.setState({\n          failedFetching: true,\n        });\n        break;\n      }\n\n      currentTimestamp -= DAY_MILLISECONDS_COUNT;\n    }\n\n    this.setState({\n      isFetching: false,\n    });\n  }\n\n  public render() {\n    return (\n      <div className=\"page-container\">\n        <header className=\"header-container\">\n          <p className=\"header-text\">V2EX 每日热门话题</p>\n          <span className=\"about-btn\" onClick={this.showAboutDialog.bind(this)}>\n            About\n          </span>\n        </header>\n        {/* 每日话题列表 */}\n        {this.state.dailyTopics.map((d) => (\n          <TopicListContainer key={d.date} topics={d.topics} date={d.date}></TopicListContainer>\n        ))}\n        {/* fetching status text */}\n        {this.state.isFetching && <p>获取数据中...</p>}\n        {/* fetch failed result text */}\n        {this.state.failedFetching && (\n          <p>\n            获取数据失败，\n            <span className=\"error-text\" onClick={this.refreshPage.bind(this)}>\n              尝试刷新一下吧\n            </span>\n          </p>\n        )}\n      </div>\n    );\n  }\n\n  private refreshPage() {\n    this.setState({\n      isFetching: true,\n      dailyTopics: [],\n      failedFetching: false,\n    });\n\n    setTimeout(() => {\n      this.componentDidMount();\n    }, 2000);\n  }\n\n  private showAboutDialog() {\n    const aboutDialog = new AboutDialog();\n    aboutDialog.show();\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./css/index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}